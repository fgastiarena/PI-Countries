{"version":3,"sources":["components/LandingPage/LandingPage.jsx","actions/actions.jsx","components/CountriesCards/CountriesCards.jsx","components/CountriesCards/Filters/Filters.jsx","components/img/loading.gif","components/SearchBar/SearchBar.jsx","components/Nav/Nav.jsx","components/Pagination/Pagination.jsx","components/Home/Home.jsx","components/CountriesCards/CountryDetail/Activity/Activity.jsx","components/CountriesCards/CountryDetail/CountryDetail.jsx","App.jsx","reducer/reducer.jsx","store/index.jsx","reportWebVitals.js","index.jsx"],"names":["LandingPage","navigate","useNavigate","className","onClick","e","preventDefault","handleClick","GET_ALL_COUNTRIES","GET_ERROR","ORDER_BY_CONTINENT","ORDER_BY_POPULATION","ORDER_BY_ALPHA","ORDER_BY_ACTIVITIES","GET_COUNTRIES_DETAILS","GET_ACTIVITIES","GET_COUNTRIES_NAMES","getAllCountries","dispatch","axios","get","allCountries","type","payload","data","console","log","CountriesCards","id","name","continents","population","flags","to","src","alt","Filters","setOrder","useDispatch","allActivities","useSelector","state","activities","handleContinent","target","value","handleAlpha","handlePopulation","handleActivities","useEffect","actJson","onChange","map","defaultValue","SearchBar","useState","setName","handleSubmit","length","countriesJson","getCountriesNames","alert","handleChange","placeholder","onKeyDown","key","Nav","exact","Pagination","countriesForRestOfPages","pagination","countriesForFirstPage","pageNumbers","i","Math","ceil","push","numberPage","Home","countries","loading","setLoading","error","indexFirstCountry","setIndexFirstCountry","indexLastCountry","setIndexLastCountry","countriesInActualPage","slice","Loading","pageNumber","c","href","setTimeout","Activity","difficulty","duration","season","CountryDetail","useParams","countryDetail","then","res","getCountriesDetails","capital","subregion","area","handleCreate","App","path","component","initialState","rootReducer","action","countriesByContinent","filter","sortAlpha","sort","a","b","localeCompare","countriesACtivities","activityFilter","el","includes","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41a2e334.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\"; //useNavigate\nimport \"./LandingPage.css\";\n\nexport default function LandingPage() {\n  const navigate = useNavigate();\n\n  function handleClick(e) {\n      e.preventDefault();\n      navigate('/countries');\n  }\n\n  return (\n    <div className=\"container-img\">\n      <div>\n        <h1> Welcome to Countries App</h1>\n        {/* <Link to=\"/home\"> */}\n          <button onClick={e => {handleClick(e)}}>Home</button> {/**/}\n        {/* </Link> */}\n      </div>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport const GET_ALL_COUNTRIES = 'GET_ALL_COUNTRIES';\nexport const GET_ERROR = 'GET_ERROR';\nexport const ORDER_BY_CONTINENT = 'ORDER_BY_CONTINENT';\nexport const ORDER_BY_POPULATION = 'ORDER_BY_POPULATION';\nexport const ORDER_BY_ALPHA = 'ORDER_BY_ALPHA';\nexport const ORDER_BY_ACTIVITIES = 'ORDER_BY_ACTIVITIES';\nexport const GET_COUNTRIES_DETAILS = 'GET_COUNTRIES_DETAILS';\nexport const GET_ACTIVITIES = 'GET_ACTIVITIES';\nexport const GET_COUNTRIES_NAMES = 'GET_COUNTRIES_NAMES';\n\n\nexport default function getAllCountries() {\n    return async function(dispatch){\n        try {\n            let allCountries = await axios.get('http://localhost:3001/countries');\n            return dispatch({\n                type: GET_ALL_COUNTRIES,\n                payload: allCountries.data\n            })\n        } catch (error) {\n            console.log('Error en actions getAllCountries -> ' + error);\n        }\n    }\n};\n\nexport function getCountriesDetails(id) {\n    return function(dispatch) {\n        try {\n            axios.get(`http://localhost:3001/countries/${id}`)\n            .then(res => \n                dispatch({\n                    type: GET_COUNTRIES_DETAILS,\n                    payload: res.data\n                }));\n        } catch (error) {\n            console.log('Error en actions getCountriesDetails -> ' + error);\n        }\n    } \n};\n\n\nexport function getCountriesNames(name){\n    return async function(dispatch) {\n        try {\n            const countriesJson = await axios.get(`http://localhost:3001/countries?name=${name}`);\n            return dispatch({\n                type: GET_COUNTRIES_NAMES,\n                payload: countriesJson.data\n            })\n        } catch (error) {\n            console.log('Error en actions getCountriesNames -> ' + error);\n        }\n    }\n};\n\n\nexport function postActivity(payload) {\n    return async function() {\n        try {\n           const newAct = await axios.post('http://localhost:3001/activity', payload);\n           return newAct;\n        } catch (error) {\n            console.log('Error en actions postActivity -> ' + error);\n        }\n    }\n};\n\nexport function getActivities() {\n    return async function(dispatch) {\n        try {\n            const actJson = await axios.get('http://localhost:3001/activity');\n            return dispatch({\n                type: GET_ACTIVITIES,\n                payload: actJson.data\n            })\n        } catch (error) {\n            console.log('Error en actions getActivities -> ' + error);\n        }\n    }\n};\n\n\n\n\n\n\n//FILTERS\n\nexport const orderByContinent = (payload) => {\n    return {\n        type: ORDER_BY_CONTINENT,\n        payload\n    }\n};\n\nexport const orderByPopulation = (payload) => {\n    return {\n        type: ORDER_BY_POPULATION,\n        payload\n    }\n};\n\nexport const orderByAlpha = (payload) => {\n    return {\n        type: ORDER_BY_ALPHA,\n        payload\n    }\n};\n\nexport const orderByActivities = (payload) => {\n    return {\n        type: ORDER_BY_ACTIVITIES,\n        payload \n    }\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './CountriesCards.css';\n\nexport default function CountriesCards({ id, name, continents, population, flags }) {\n  return (\n    <>\n      <Link to={`/countries/${id}`}>\n        <div>\n          <h2 id=\"titleName\">{name}</h2>\n          <h3>{continents}</h3>\n          <h3>Population: {population}</h3>\n\n          <img className=\"flags\" src={flags} alt=\"Country flag\" />\n        </div>\n      </Link>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getAllCountries, { getActivities, orderByActivities, orderByAlpha, orderByContinent, orderByPopulation } from \"../../../actions/actions.jsx\";\n\nexport default function Filters({ setOrder }) {\n\n  const dispatch = useDispatch();\n  const allActivities = useSelector(state => state.activities);\n\n  const chargeCountries = () => {\n    dispatch(getAllCountries());\n  };\n\n  const handleContinent = (e) => {\n      e.preventDefault();\n      dispatch(orderByContinent(e.target.value))\n  };\n\n  const handleAlpha = (e) => {\n    e.preventDefault();\n    dispatch(orderByAlpha(e.target.value));\n    setOrder(`Order ${e.target.value}`);  //Cuando seteo esta pag, modifico el localState y renderizo //arranca vacío en el home y acá lo seteo ordenado de tal forma...\n  };\n\n  const handlePopulation = (e) => {\n    e.preventDefault();\n    dispatch(orderByPopulation(e.target.value));\n    setOrder(`Order ${e.target.value}`);\n  };\n\n  const handleActivities =(e) => {\n    e.preventDefault();\n    dispatch(orderByActivities(e.target.value));\n  };\n\n  useEffect(() => {\n    setOrder(\"Ordered\");\n  }, [handleAlpha, handlePopulation]);\n\n\n  useEffect(() => {\n    dispatch(getActivities());\n  }, [dispatch]);\n\n\n\n  //agregar logica al filtrado con redux desde actions.\n  return (\n\n    <div>\n\n        <select  onChange={(e) => {handleActivities(e)}}>\n            <option value=\"All\">All Activities</option>\n            {allActivities.map(e => {\n                    return (\n                        <option value={e.name} key={e.id} >{e.name}</option>\n                    );\n                })}\n        </select>\n\n      <select defaultValue={\"DEFAULT\"} onChange={(e) => {handleContinent(e)}}> \n        <option value=\"DEFAULT\">All Continents</option>\n        <option value=\"North America\">North America</option>  {/* con el value puedo acceder a que valor tienen c/u de esas opctions para que cuando hago click se haga toda la lógica de la action */}\n        <option value=\"South America\">South America</option>\n        <option value=\"Africa\">Africa</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Asia\">Asia</option>\n        <option value=\"Oceania\">Oceania</option>\n      </select>\n\n      <select defaultValue={\"DEFAULT\"} onChange={(e) => {handleAlpha(e)}}> \n        <option value=\"DEFAULT\">Alphabetic</option>\n        <option value=\"Asc\">A-Z</option>\n        <option value=\"Desc\">Z-A</option>\n      </select>\n\n      <select defaultValue={\"DEFAULT\"} onChange={(e) => {handlePopulation(e)}}> \n        <option value=\"DEFAULT\">Population</option>\n        <option value=\"AscPop\">Ascending Population</option>\n        <option value=\"DescPop\">Descending Population</option>\n      </select>\n\n      <button className=\"btn-AllCountries\" onClick={chargeCountries}>All Countries</button>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.95f0ee82.gif\";","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCountriesNames } from '../../actions/actions';\n\nexport default function SearchBar() {\n\n    const dispatch = useDispatch();\n    const [name, setName] = useState(''); //\n\n\n    function handleChange(e){\n        e.preventDefault();\n        setName('');\n        setName(e.target.value);  //value del input\n    };\n\n    function handleEnter(e){\n       if(e.key === 'Enter') handleSubmit(e);\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        name.length > 2 ? \n        dispatch(getCountriesNames(name)) :\n        alert('Enter at least three letters');\n    }\n\n    return (\n        <div>\n            <input \n                onChange={e => handleChange(e)}\n                placeholder='Search Country...' \n                type='text'\n                value={name}\n                onKeyDown={handleEnter}\n            />\n            <button\n                type='submit'\n                onClick={e => handleSubmit(e)}\n            >\n                Search\n            </button>\n        </div>\n    )\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport SearchBar from '../SearchBar/SearchBar';\n\nexport default function Nav({setOrder}) {\n    // const navigate = useNavigate();\n\n    // function handleClick(e){\n    //     e.preventDefault();\n    //     navigate('/create');\n    // }\n\n    return (\n        <div>\n            <NavLink exact to=\"/create\">\n                <button type='submit'>Create Activity</button>\n            </NavLink>\n            <SearchBar/>\n            {/* <button onClick={e => handleClick(e)}>Create Activity</button> */}\n        </div>\n    )\n};\n","import React from 'react';\nimport './Pagination.css';\n\nexport default function Pagination({countriesForRestOfPages, allCountries, pagination, countriesForFirstPage = 9}) {\n  const pageNumbers = [];\n\n  for (let i = 1; i < (Math.ceil((allCountries - countriesForFirstPage) / countriesForRestOfPages) + 1) + 1; i++) {    // total de pags que voy a tener\n    pageNumbers.push(i);    \n  }\n\n  return (\n    <nav className='pagination-container'>\n      <ul className='ulPag'>\n        {pageNumbers &&\n        pageNumbers.map(numberPage => (\n          <li className='list-items' onClick={pagination} key={numberPage} value={numberPage}>  \n           {numberPage} {/*c/u de las pag que necesito para renderizar todos mis países*/}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getAllCountries from \"../../actions/actions.jsx\";\nimport CountriesCards from \"../CountriesCards/CountriesCards.jsx\";\nimport Filters from \"../CountriesCards/Filters/Filters.jsx\";\nimport loading from \"../img/loading.gif\";\nimport Nav from \"../Nav/Nav.jsx\";\nimport Pagination from \"../Pagination/Pagination.jsx\";\nimport './Home.css';\n\nexport default function Home() {\n  const dispatch = useDispatch(); //para ir despachando mis acciones cuando utilice esta const\n  const allCountries = useSelector((state) => state.countries); //traigo todo lo que está en el estado de countries\n  const [loading, setLoading] = useState(true);\n  const [order, setOrder] = useState(\"\");\n  const error = useSelector((state) => state.error);\n\n  //Pagination\n  const countriesForFirstPage = 9;\n  const countriesForRestOfPages = 10;\n\n  const [indexFirstCountry, setIndexFirstCountry] = useState(0);\n  const [indexLastCountry, setIndexLastCountry] = useState(countriesForFirstPage);\n\n  const countriesInActualPage = allCountries.slice( \n    indexFirstCountry,\n    indexLastCountry\n  );\n\n  const pagination = (e) => {\n    const pageNumber = e.target.value; //onClick btn\n    setIndexFirstCountry(pageNumber === 1 ? 0 : (countriesForRestOfPages * (pageNumber - 1) - 1)); //si estoy en la pag 1 quiero mi FirstIndex en 0\n    setIndexLastCountry(pageNumber === 1 ? countriesForFirstPage :  ((countriesForRestOfPages * (pageNumber))) - 1);\n  };\n\n  \n  //traigo del estado los countries cuando se monta el componente\n  useEffect(() => {\n    dispatch(getAllCountries());\n  }, [dispatch]);\n\n  return (\n    <>\n      {loading === true ? (\n        <Loading setLoading={setLoading} />\n      ) : (\n        <div>\n          <h1>CountriesApp</h1>\n        </div>\n      )}\n\n      <Nav setOrder={setOrder}/>\n      <Filters setOrder={setOrder} />\n\n      <Pagination\n        countriesForRestOfPages={countriesForRestOfPages}\n        allCountries={allCountries.length}  //necesito un valor numérico\n        pagination={pagination}\n        countriesForFirstPage={countriesForFirstPage}\n      />\n\n      <div>\n\n        {countriesInActualPage?.length !== 0 ? (\n          countriesInActualPage.map((c) => {\n            return (\n              <CountriesCards\n                key={c.id}\n                id={c.id}\n                name={c.name}\n                continents={c.continents}\n                population={c.population}\n                flags={c.flags}\n              />\n            );\n          })\n        ) : (\n          <h1>{error}</h1>\n        )}\n\n        <div>\n          <a href=\"#\">\n            <button className=\"btn-up\">^</button>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport function Loading({ setLoading }) {\n  return (\n    <div>\n      <img className=\"loading-img\" src={loading} alt=\"Loading ...\" />\n      <div>\n        <p>Loading ... just a second please </p>\n      </div>\n      {setTimeout(() => {\n        setLoading(false);\n      }, 1000)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport './Activity.css';\n\n\nexport default function Activity({name, difficulty, duration, season}) {\n  return (\n    <div>\n      <p>Name: {name}</p>\n      <p>Difficulty: {difficulty}</p>\n      <p>Duration: {duration}</p>\n      <p>Season: {season}</p>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getCountriesDetails } from \"../../../actions/actions\";\nimport Activity from \"./Activity/Activity.jsx\";\n\nexport default function CountryDetail() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const countryDetail = useSelector((state) => state.countryDetail);\n  let navigate = useNavigate();\n\n\n  useEffect(() => {\n    dispatch(getCountriesDetails(id));\n  }, [dispatch, id]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    navigate('/countries');\n  }\n\n  function handleCreate(e) {\n    e.preventDefault();\n    navigate('/create');\n  }\n\n  return (\n    <>\n      <div>\n        <h1>{countryDetail.name}</h1>\n        <h3>Id: {countryDetail.id}</h3>\n        <img\n          src={countryDetail.flags}\n          alt={`flag from ${countryDetail.name}`}\n        />\n      </div>\n\n      <div>\n        <h2>Continent: {countryDetail.continents}</h2>\n        <h2>Capital: {countryDetail.capital}</h2>\n        <h2>Subregion: {countryDetail.subregion}</h2>\n        <h2>Area: {countryDetail.area}km²</h2>\n        <h2>Population: {countryDetail.population}</h2>\n      </div>\n\n      <div>\n        <p>\n          <strong>Activities</strong>\n        </p>\n      </div>\n\n      {countryDetail.activities.length ? (\n        countryDetail.activities.map((e) => {\n          return (\n            <Activity\n              key={e.id}\n              name={e.name}\n              difficulty={e.difficulty}\n              duration={e.duration}\n              season={e.season}\n            />\n          );\n        })\n      ) : (\n        <h3>This country has no activity for the moment. Create one!</h3>\n      )}\n\n      <div>\n        {/* <NavLink exact to='/countries'> */}\n        <button type='submit'onClick={e=> handleClick(e)}>Back to Home</button>  {/**/}\n        {/* </NavLink> */}\n\n        {/* <NavLink exact to='/create'> */}\n        <button type='submit' onClick={e=> handleCreate(e)}>Create Activity</button>  {/**/}\n        {/* </NavLink> */}\n      </div>\n    </>\n  );\n}\n","import \"./App.css\";\nimport { Route} from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport Home from \"./components/Home/Home\";\nimport CountryDetail from \"./components/CountriesCards/CountryDetail/CountryDetail\";\n// import FormActivity from \"./components/FormActivity/FormActivity\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n  \n          <Route exact path=\"/\" component={LandingPage}/>\n          <Route exact path=\"/home\" component={Home}/>\n          <Route exact path=\"/countries/:id\" component={CountryDetail}/>\n        {/* <Route exact path=\"/create\" component={FormActivity} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  GET_ALL_COUNTRIES,\n  GET_ERROR,\n  ORDER_BY_CONTINENT,\n  ORDER_BY_POPULATION,\n  ORDER_BY_ALPHA,\n  ORDER_BY_ACTIVITIES,\n  GET_COUNTRIES_DETAILS,\n  GET_ACTIVITIES,\n  GET_COUNTRIES_NAMES,\n} from \"../actions/actions.jsx\";\n\nlet initialState = {\n  countries: [],\n  allCountries: [],\n  error: \"\",\n  countryDetail: [],\n  activities: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload, //en mi state countries y allcoutries que son arrays vacíos en un principio, guardo todo lo que me indique mi action GET_ALL_COUNTRIES\n        allCountries: action.payload,\n      };\n\n    case GET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        countries: [],\n      };\n\n      case GET_COUNTRIES_DETAILS:\n        return {\n          ...state,\n          countryDetail: action.payload\n        };\n      \n      case GET_ACTIVITIES:\n        return {\n          ...state,\n          activities: action.payload\n        };\n      \n      case GET_COUNTRIES_NAMES:\n        return {\n          ...state,\n          countries: action.payload\n        }\n      \n    case ORDER_BY_CONTINENT:\n      const countriesByContinent =\n        action.payload === \"DEFAULT\"\n          ? state.allCountries\n          : state.allCountries.filter((e) => e.continents === action.payload);\n      return {\n        ...state,\n        countries: countriesByContinent,\n      };\n\n    case ORDER_BY_ALPHA:\n      const sortAlpha =\n        action.payload === \"Asc\"\n          ? state.countries.sort((a, b) => a.name.localeCompare(b.name))\n          : state.countries.sort((a, b) => b.name.localeCompare(a.name));\n\n      return {\n        ...state,\n        countries: sortAlpha,\n      };\n\n    case ORDER_BY_POPULATION:\n      const population =\n        action.payload === \"AscPop\"\n          ? state.countries.sort((a, b) => a.population - b.population)\n          : state.countries.sort((a, b) => b.population - a.population);\n      return {\n        ...state,\n        countries: population,\n      };\n    \n      case ORDER_BY_ACTIVITIES:\n        const countriesACtivities = state.allCountries;\n        const activityFilter = action.payload === 'All' ? countriesACtivities : countriesACtivities.filter(e => \n          // e.activities && e.activities.map(el => el.name).includes(action.payload)\n          e.activities?.map(el => el.name).includes(action.payload)\n         );\n         return {\n           ...state,\n           countries: activityFilter\n         };\n\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import {createStore, applyMiddleware } from \"redux\";  \nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducer/reducer.jsx\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {store} from \"./store/index.jsx\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}